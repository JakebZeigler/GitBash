Here's how to set it up:

Generate an SSH Key (if you havenâ€™t already):
Open Git Bash and enter the following command, replacing your_email@example.com with your email:

bash
Copy code
ssh-keygen -t rsa -b 4096 -C "your_email@example.com"
When prompted to "Enter a file in which to save the key," press Enter to accept the default file location.

Add Your SSH Key to the ssh-agent:
First, start the ssh-agent:

bash
Copy code
eval "$(ssh-agent -s)"
Then, add your SSH private key to the ssh-agent:

bash
Copy code
ssh-add ~/.ssh/id_rsa
Add Your SSH Public Key to Your GitHub Account:

Run cat ~/.ssh/id_rsa.pub to display your SSH public key.
Copy the SSH public key to your clipboard.
On GitHub, go to "Settings" > "SSH and GPG keys."
Click on "New SSH key," paste your SSH key, and save it.
Change Your Remote URL to SSH:
Change the remote URL of your repository from HTTPS to SSH. Replace your-repository-url with your actual repository URL:

bash
Copy code
git remote set-url origin git@github.com:username/repositorySSHTok.git
Push Your Changes Using SSH:
Now, you can push changes without being prompted to log in via a browser:

bash
Copy code
git add .
git commit -m "Update"
git push origin master
By using SSH, your Git operations authenticate using the SSH key instead of your username and password. This will enable you to push changes directly from Git Bash without needing to log in via a browser each time.